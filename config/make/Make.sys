# vim: ft=make: sw=2:
${core.show-current-location}

# Environment, file .buildrc    file config/build.yaml
# ==========================    ===================
# SK_ENV_ARTIFACTS_OFFSET       SK_PRJ_ARTIFACTS_OFFSET
# SK_ENV_ARTIFACTS_TOP          SK_PRJ_ARTIFACTS_TOP
#
# SK_ENV_ARTIFACTS_BIN_OFFSET   SK_PRJ_ARTIFACTS_BIN_OFFSET
# SK_ENV_ARTIFACTS_BIN_TOP      SK_PRJ_ARTIFACTS_BIN_TOP
#
# SK_ENV_ARTIFACTS_GEN_OFFSET   SK_PRJ_ARTIFACTS_GEN_OFFSET
# SK_ENV_ARTIFACTS_GEN_TOP      SK_PRJ_ARTIFACTS_GEN_TOP
#
# SK_ENV_ARTIFACTS_PKG_OFFSET   SK_PRJ_ARTIFACTS_PKG_OFFSET
# SK_ENV_ARTIFACTS_PKG_TOP      SK_PRJ_ARTIFACTS_PKG_TOP

# variable-choice-first:
#   Makes a preferential list of variables and picks the first entry.
#

sys.p.VE := SK_ENV_ARTIFACTS
sys.p.VP := SK_PRJ_ARTIFACTS

sys.p.vcf = ${firstword $($(sys.p.VE)_$(1)_$(2)) $($(sys.p.VP)_$(1)_$(2)) $($(sys.p.VE)_$(2)) $($(sys.p.VP)_$(2)) $(3)}

# $(1) - Varialble name variator
# $(2) - Leaf path component name
# $(3) - Offset
# $(4) - Top
define sys.p.setup-artifacts-for
  ${eval sys.$(1)TOP := ${call sys.p.vcf,$(1),TOP,$(4) $(SK_MAKE_PATH_TO_TOP)/..}/${call sys.p.vcf,$(1),OFFSET,$(3) .}/$(2)/${call sys.p.vcf,$(1),SUFFIX,.}}
  ${eval sys.$(1)DIR := $(sys.$(1)TOP)/$(SK_MAKE_PATH_FROM_TOP)}
endef

define sys.p.setup-artifacts-bin
  ${call sys.p.setup-artifacts-for,BIN,bin,$(1),$(2)}
endef
sys.setup-artifacts-bin = ${eval ${call sys.p.setup-artifacts-bin,$(1),$(2)}}

define sys.p.setup-artifacts-gen
  ${call sys.p.setup-artifacts-for,GEN,gen,$(1),$(2)}
endef
sys.setup-artifacts-gen = ${eval ${call sys.p.setup-artifacts-gen,$(1),$(2)}}

define sys.p.setup-artifacts-pkg
  ${call sys.p.setup-artifacts-for,PKG,pkg,$(1),$(2)}
endef
sys.setup-artifacts-pkg = ${eval ${call sys.p.setup-artifacts-pkg,$(1),$(2)}}

define sys.p.setup-artifacts
  ${call sys.p.setup-artifacts-bin,$(1),$(2)}
  ${call sys.p.setup-artifacts-gen,$(1),$(2)}
  ${call sys.p.setup-artifacts-pkg,$(1),$(2)}
endef
sys.setup-artifacts = ${eval ${call sys.p.setup-artifacts,$(1),$(2)}}

sys.SRCTOP := $(SK_MAKE_PATH_TO_TOP)
sys.SRCDIR := .

${call sys.setup-artifacts}

${call core.info,sys,SRCTOP - $(sys.SRCTOP)}
${call core.info,sys,SRCDIR - $(sys.SRCDIR)}

${call core.info,sys,BINTOP - $(sys.BINTOP)}
${call core.info,sys,BINDIR - $(sys.BINDIR)}

${call core.info,sys,GENTOP - $(sys.GENTOP)}
${call core.info,sys,GENDIR - $(sys.GENDIR)}

${call core.info,sys,PKGTOP - $(sys.PKGTOP)}
${call core.info,sys,PKGDIR - $(sys.PKGDIR)}

sys-ensure-LOCATION::
	@ ${if $(LOCATION),,${error LOCATION not specified, no place for deliverables}}
	@ test -d $(LOCATION) || (echo Specified location $(LOCATION) is not a folder; false)

.PHONY: sys-ensure-LOCATION
