# vim: ft=make: sw=2:

core.trace-on = ${or ${findstring all,$(TRACE)},${findstring $(1),$(TRACE)}}

define core.trace
  ${if ${call core.trace-on,$(1)},${warning ### [$(1)] $(2) $(3)}}
endef

define core.info
  ${if ${call core.trace-on,$(1)},${info ### [$(1)] $(2) $(3)}}
endef

define core.ensure-defined
  ${foreach item,$(1),${if $($(item)),,${error $(item) not defined}}}
endef

define core.trace-current-location
  ${call core.trace,core,Got here,$(core.LAST_LOADED_FILE)}
endef

define core.show-current-location
  ${call core.info,core,Got here $(core.LAST_LOADED_FILE)}
endef

define core.load-local-makefile-if-present
  ${eval ${if $(SK_MAKE_LOCAL_MAKEFILE),${call core.load,$(SK_MAKE_LOCAL_MAKEFILE)},${call core.load-if-present,makefile}}}
endef

define core.load-all-makefiles-to-top
  ${foreach item,$(SK_MAKE_MAKEFILES_TO_TOP),${call core.load,$(item)}}
endef

define core.load-with
  ${eval core.LAST_LOADED_FILE := $(1)}
  ${eval core.LOADED_FILES += $(1)}
  ${call core.trace,debug,Loading $(1)}
  $(2) $(1)
endef

define core.load-unique-with
  ${if ${findstring $(1),$(core.LOADED_FILES)},,${call core.load-with,$(1),$(2)}}
endef

define core.load
  ${eval ${call core.load-unique-with,$(1),include}}
endef

define core.load-if-present
  ${eval ${call core.load-unique-with,$(1),-include}}
endef

define core.load-from-current
  ${call core.load,${dir $(core.LAST_LOADED_FILE)}$(1)}
endef

define core.load-config
  ${call core.load$(2),${dir $(core.GLOBAL_CONFIG_DIR)}${strip $(1)}}
endef

define core.eval-if-local
  ${if ${filter ./,${dir $(core.LAST_LOADED_FILE)}},${eval ${call $(1),$(2),$(3),$(4),$(5),$(6),$(7),$(8),$(9)}},}
endef

MAKE := $(SK_MAKE_SELF_PATH)
core.LAST_LOADED_FILE := $(SK_MAKE_GLOBAL_MAKEFILE)
core.LOADED_FILES := $(SK_MAKE_GLOBAL_MAKEFILE)
core.GLOBAL_CONFIG_DIR := ${dir $(SK_MAKE_GLOBAL_MAKEFILE)}

${call core.info,core,[$(MAKECMDGOALS)] In ${shell pwd}}
${call core.show-current-location}
${call core.load-config,Make.util}

ifdef SK_MAKE_PROJECT_MAKEFILE
  define core.load-project-config
	${call core.load$(2),$(core.PROJECT_CONFIG_DIR)${strip $(1)}}
  endef

  core.PROJECT_CONFIG_DIR := ${dir $(SK_MAKE_PROJECT_MAKEFILE)}
endif

define core.private.load-plugin
  ${call core.load-config,plugins/${strip $(1)}.mk,-if-present}
  ${call core.load-project-config,plugins/${strip $(1)}.mk,-if-present}
endef

define core.load-plugin
  ${eval ${call core.private.load-plugin,$(1)}}
endef

ifdef SK_MAKE_PROJECT_MAKEFILE
  ${call core.load,$(SK_MAKE_PROJECT_MAKEFILE)}
else
  ${call core.load-local-makefile-if-present}
endif
